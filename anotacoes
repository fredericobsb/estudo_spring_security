1) Criada aplicacao com spring initilizer.

2) Testei o endpoint no postman. tudo ok.

3) Adicionei a dependencia do spring security:
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		O get ta ok, mas o post deu "nao autorizado"
		
4) Criou a classe WebSecurityConfig, que extende um adapter.
		
********** @EnableWebSecutiry ***************

Esta anotacao usada na classe WebSecurityConfig desliga as configuracoes 
de segurança padrão do spring security.

*********************************************
* O ultimo metodo do metodo "configure", o "permitAll" diz que todos os endpoints poderão
ser acessados.

* O ultimo metodo do metodo "configure", o "authenticated" diz que todos os endpoints
só poderão ser acessados por usuarios autenticados.

5) Requisicoes POST, PUT e DELETE são bloqueadas por padrão do spring security por causa
da protecao CSRF. Para desabilita-la, tem de adicionar o método .csrf().disable();

6) Adicionou autenticacao em memoria com usuario e senha, setou aba do postman para "Basic Auth".
   Mas ao enviar requisicao, deu o erro:
   
    "There is no PasswordEncoder mapped for the id "null"
    
    esse erro é porque tem que passar um encoder para a senha.
    
7) Criada a estrutura em banco de dados para cadastrar um usuario.

    * Inseridos usuarios no banco manualmente, com o SQL:
    Site gerador de UUID: https://www.uuidgenerator.net/
    
    into tb_user values(1,'$2a$10$f5M6GsPfoDEveqw8XsuH8.rm.mjwKQY3Q23ZRg46BXfdgIXXQPhDy','Florisvaldo');

	insert into tb_user values(2,'$2a$10$f5M6GsPfoDEveqw8XsuH8.rm.mjwKQY3Q23ZRg46BXfdgIXXQPhDy','Maria');

	insert into tb_user values(3,'$2a$10$f5M6GsPfoDEveqw8XsuH8.rm.mjwKQY3Q23ZRg46BXfdgIXXQPhDy','João');
    
8) Criada uma nova classe de configuracao: UserDetailsServiceImpl e feitas alteracoes para
autenticar com dados do usuario em banco de dados, e não mais em banco em memória. 

9) Criadas as entidades de Roles (controle de nivel de acesso), e inserido os roles no banco
com o seguinte comando sql:
           insert into tb_role values(1, 'ROLE_ADMIN');
           insert into tb_role values(2, 'ROLE_USER');
              * UUID aleatorio gerado em https://www.uuidgenerator.net/.

10) Criadas as relacoes dos usuarios com os respectivos roles:

insert into tb_users_roles values(1,1); //florisvaldo user
insert into tb_users_roles values(2,1); //Maria user
insert into tb_users_roles values(3,2);  //Joao admin

	Acessado os endpoints, mas deu erro porque nao carregou as roles dos usuarios(Persistent bag vazio).
    -> Coloque @Transactional a nivel de classe em UserDetailsServiceImpl que vai carregar as roles.
    
11) Atribuindo restricoes: quais usuarios podem acessar quais recursos.

12) A partir da versão 5.7 do Spring Security, o recomendado é usar componentes. 